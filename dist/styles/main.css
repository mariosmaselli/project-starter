/* 
  Current sass allows to import static .css files
   by adding a ~ a the beginning of the string and
   by specifying that is a css file (this may change in the future) 
*/
@import url(~node_modules/normalize.css/normalize.css);
/* -----
Path
----- */
/* -----
Colors
----- */
/* -----
Font Weight
----- */
/* -----
Font Family
----- */
/* -----
Grid
----- */
/* -----
Easings
----- */
/* -----
Mixins
----- */
/* -----
12 columns Responsive Grid
----- */
.row {
  zoom: 1; }
  .row:before, .row:after {
    content: '\0020';
    display: block;
    overflow: hidden;
    visibility: hidden;
    width: 0;
    height: 0; }
  .row:after {
    clear: both; }

.device-content {
  position: relative;
  width: 97rem;
  display: block;
  margin-left: auto;
  margin-right: auto; }

.column {
  display: block;
  float: left;
  min-height: 1px; }

.col-1 {
  width: 8.33333%; }

.col-2 {
  width: 16.66667%; }

.col-3 {
  width: 25%; }

.col-4 {
  width: 33.33333%; }

.col-5 {
  width: 41.66667%; }

.col-6 {
  width: 50%; }

.col-7 {
  width: 58.33333%; }

.col-8 {
  width: 66.66667%; }

.col-9 {
  width: 75%; }

.col-10 {
  width: 83.33333%; }

.col-11 {
  width: 91.66667%; }

.col-12 {
  width: 100%; }

img.scale-with-grid {
  width: 100%;
  height: auto;
  display: block; }

/* -----
Typography, WebFonts
----- */
/* -----
Media Queries
----- */
@media only screen and (max-width: 679px) {
  .not-mobile {
    display: none; } }

@media only screen and (min-width: 680px) {
  .not-mobile {
    display: none; } }

@media only screen and (min-width: 1025px) {
  .not-desktop {
    display: none; }
  .not-mobile {
    display: block; } }

/* -----
Preloader
----- */
.preloader {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: auto;
  width: 100%;
  height: 100%;
  background: #00152c;
  position: relative;
  text-align: center;
  z-index: 1; }

/* -----
CSS3 @keyframes
----- */
/* -----
Spinner
----- */
* {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uc2NzcyIsIm1vZHVsZXMvX3ZhcmlhYmxlcy5zY3NzIiwibW9kdWxlcy9fbWl4aW5zLnNjc3MiLCJtb2R1bGVzL19ncmlkLnNjc3MiLCJtb2R1bGVzL19mb250cy5zY3NzIiwibW9kdWxlcy9fbWVkaWFzLnNjc3MiLCJtb2R1bGVzL3ByZWxvYWRlci5zY3NzIiwibW9kdWxlcy9fa2V5ZnJhbWVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7Ozs7RUFJRTtBQUNGLHVEQUFPO0FDUlA7O1FBRVE7QUFJUjs7UUFFUTtBQVFSOztRQUVRO0FBUVI7O1FBRVE7QUFLUjs7UUFFUTtBQWVSOztRQUVRO0FDbERSOztRQUVRO0FDSlI7O1FBRVE7QUFDUjtFQUNFLFFBQU8sRUFVUjtFQVhEO0lBR0ksaUJBQWU7SUFDZixlQUFhO0lBQ2IsaUJBQWU7SUFDZixtQkFBaUI7SUFDakIsU0FBTztJQUNQLFVBQ0YsRUFBQztFQVRIO0lBVVcsWUFBVSxFQUFHOztBQUV4QjtFQUNFLG1CQUFrQjtFQUNsQixhQUFZO0VET1YsZUFBYztFQUNkLGtCQUFpQjtFQUNqQixtQkFBa0IsRUNOckI7O0FBQ0Q7RUFDRSxlQUFjO0VBQ2QsWUFBVztFQUNYLGdCQUFlLEVBQ2hCOztBQUNEO0VBQU8sZ0JGVWdCLEVFVkY7O0FBQ3JCO0VBQU8saUJGVWdCLEVFVkY7O0FBQ3JCO0VBQU8sV0ZVVyxFRVZHOztBQUNyQjtFQUFPLGlCRlVnQixFRVZGOztBQUNyQjtFQUFPLGlCRlVnQixFRVZGOztBQUNyQjtFQUFPLFdGVVcsRUVWRzs7QUFDckI7RUFBTyxpQkZVZ0IsRUVWRjs7QUFDckI7RUFBTyxpQkZVZ0IsRUVWRjs7QUFDckI7RUFBTyxXRlVXLEVFVkc7O0FBQ3JCO0VBQVEsaUJGVWUsRUVWQTs7QUFDdkI7RUFBUSxpQkZVZSxFRVZBOztBQUN2QjtFQUFRLFlGVVcsRUVWSTs7QUFFdkI7RUFDRSxZQUFXO0VBQ1gsYUFBWTtFQUNaLGVBQWMsRUFDZjs7QUMzQ0Q7O1FBRVE7QUNGUjs7UUFFUTtBQU9SO0VBRUM7SUFDQyxjQUFhLEVBQ2IsRUFBQTs7QUFHRjtFQUVDO0lBQ0MsY0FBYSxFQUNiLEVBQUE7O0FBSUY7RUFFQztJQUNDLGNBQWEsRUFDYjtFQUVEO0lBQ0MsZUFBYyxFQUNkLEVBQUE7O0FDaENGOztRQUVRO0FBQ1I7RUpzQ0ssZ0JBQWU7RUFDZixPQUFNO0VBQUUsU0FBUTtFQUFFLFVBQVM7RUFBRSxRQUFNO0VBQ25DLGFBQVk7RUFJZixZSTFDb0I7RUoyQ3BCLGFJM0N5QjtFQUV2QixvQkxJYztFS0hkLG1CQUFpQjtFQUNqQixtQkFBa0I7RUFDbEIsV0FBVSxFQUdiOztBQ2JEOztRQUVRO0FBQ1I7O1FBRVE7QVBnQlI7RUFDQyxVQUFTO0VBQ1QsV0FBVTtFQUVWLCtCQUFzQjtVQUF0Qix1QkFBc0I7RUFFdEIsbUNBQWtDO0VBRWxDLG9DQUFtQztFQUNuQyxtQ0FBa0M7RUFFbEMsOENBQTBDLEVBQzFDIiwiZmlsZSI6Im1haW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG5AY2hhcnNldCBcIlVURi04XCI7XG5cbi8qIFxuICBDdXJyZW50IHNhc3MgYWxsb3dzIHRvIGltcG9ydCBzdGF0aWMgLmNzcyBmaWxlc1xuICAgYnkgYWRkaW5nIGEgfiBhIHRoZSBiZWdpbm5pbmcgb2YgdGhlIHN0cmluZyBhbmRcbiAgIGJ5IHNwZWNpZnlpbmcgdGhhdCBpcyBhIGNzcyBmaWxlICh0aGlzIG1heSBjaGFuZ2UgaW4gdGhlIGZ1dHVyZSkgXG4qL1xuQGltcG9ydCAnfm5vZGVfbW9kdWxlcy9ub3JtYWxpemUuY3NzL25vcm1hbGl6ZS5jc3MnO1xuXG5AaW1wb3J0IFwibW9kdWxlcy92YXJpYWJsZXNcIjtcbkBpbXBvcnQgXCJtb2R1bGVzL21peGluc1wiO1xuQGltcG9ydCBcIm1vZHVsZXMvZ3JpZFwiO1xuQGltcG9ydCBcIm1vZHVsZXMvZm9udHNcIjtcbkBpbXBvcnQgXCJtb2R1bGVzL21lZGlhc1wiO1xuQGltcG9ydCBcIm1vZHVsZXMvcHJlbG9hZGVyXCI7XG5AaW1wb3J0IFwibW9kdWxlcy9rZXlmcmFtZXNcIjtcblxuXG5cblxuKiB7XG5cdG1hcmdpbjogMDtcblx0cGFkZGluZzogMDtcblxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXG5cdHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG5cdFxuXHQtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcblx0LW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcblxuXHQtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwwLDAsMCk7XG59XG5cblxuXG4iLCIvKiAtLS0tLVxuUGF0aFxuLS0tLS0gKi9cbiRpbWctcGF0aDogXCIuLi9hc3NldHMvaW1nXCI7XG4kZm9udHMtcGF0aDogXCIuLi9hc3NldHMvZm9udHMvXCI7XG5cbi8qIC0tLS0tXG5Db2xvcnNcbi0tLS0tICovXG5cbiRibHVlOiAjMDBjZGZmO1xuJGRhcmtibHVlOiAjMDAxNTJjO1xuJG5vbmU6IHJnYmEoMCwwLDAsMCk7XG4kZGFyazogIzEwMUMyNztcblxuXG4vKiAtLS0tLVxuRm9udCBXZWlnaHRcbi0tLS0tICovXG4kcmVndWxhcjogNDAwO1xuJG1lZGl1bTogNTAwO1xuJHNlbWlib2xkOiA2MDA7XG4kYm9sZDogNzAwO1xuJGV4dHJhYm9sZDogODAwO1xuXG5cbi8qIC0tLS0tXG5Gb250IEZhbWlseVxuLS0tLS0gKi9cbiRyZWFsZXdheTonUmFsZXdheScsIHNhbnMtc2VyaWY7XG4kZm9udDogJHJlYWxld2F5O1xuXG5cbi8qIC0tLS0tXG5HcmlkXG4tLS0tLSAqL1xuJGNvbF8xOiAgOC4zMzMzMzMzMzMzMyU7XG4kY29sXzI6ICAxNi42NjY2NjY2NjY3JTtcbiRjb2xfMzogXHRcdCAgIDI1LjAlO1xuJGNvbF80OiAgMzMuMzMzMzMzMzMzMyU7XG4kY29sXzU6ICA0MS42NjY2NjY2NjY3JTtcbiRjb2xfNjogXHRcdCAgIDUwLjAlO1xuJGNvbF83OiAgNTguMzMzMzMzMzMzMyU7XG4kY29sXzg6ICA2Ni42NjY2NjY2NjY3JTtcbiRjb2xfOTogXHRcdCAgIDc1LjAlO1xuJGNvbF8xMDogODMuMzMzMzMzMzMzMyU7XG4kY29sXzExOiA5MS42NjY2NjY2NjY3JTtcbiRjb2xfMTI6IFx0XHQgICAgMTAwJTtcblxuXG4vKiAtLS0tLVxuRWFzaW5nc1xuLS0tLS0gKi9cbiRzbmFwOiBjdWJpYy1iZXppZXIoMCwxLC41LDEpO1xuJGVhc2VPdXRDdWJpYzogY3ViaWMtYmV6aWVyKC4yMTUsLjYxLC4zNTUsMSk7XG4kZWFzZUluT3V0Q3ViaWM6IGN1YmljLWJlemllciguNjQ1LC4wNDUsLjM1NSwxKTtcbiRlYXNlSW5DaXJjOiBjdWJpYy1iZXppZXIoLjYsLjA0LC45OCwuMzM1KTtcbiRlYXNlT3V0Q2lyYzogY3ViaWMtYmV6aWVyKC4wNzUsLjgyLC4xNjUsMSk7XG4kZWFzZUluT3V0Q2lyYzogY3ViaWMtYmV6aWVyKC43ODUsLjEzNSwuMTUsLjg2KTtcbiRlYXNlSW5FeHBvOiBjdWJpYy1iZXppZXIoLjk1LC4wNSwuNzk1LC4wMzUpO1xuJGVhc2VPdXRFeHBvOiBjdWJpYy1iZXppZXIoLjE5LDEsLjIyLDEpO1xuJGVhc2VJbk91dEV4cG86IGN1YmljLWJlemllcigxLDAsMCwxKTtcbiRlYXNlSW5RdWFkOiBjdWJpYy1iZXppZXIoLjU1LC4wODUsLjY4LC41Myk7XG4kZWFzZU91dFF1YWQ6IGN1YmljLWJlemllciguMjUsLjQ2LC40NSwuOTQpO1xuJGVhc2VJbk91dFF1YWQ6IGN1YmljLWJlemllciguNDU1LC4wMywuNTE1LC45NTUpO1xuJGVhc2VJblF1YXJ0OiBjdWJpYy1iZXppZXIoLjg5NSwuMDMsLjY4NSwuMjIpO1xuJGVhc2VPdXRRdWFydDogY3ViaWMtYmV6aWVyKC4xNjUsLjg0LC40NCwxKTtcbiRlYXNlSW5PdXRRdWFydDogY3ViaWMtYmV6aWVyKC43NywwLC4xNzUsMSk7XG4kZWFzZUluUXVpbnQ6IGN1YmljLWJlemllciguNzU1LC4wNSwuODU1LC4wNik7XG4kZWFzZU91dFF1aW50OiBjdWJpYy1iZXppZXIoLjIzLDEsLjMyLDEpO1xuJGVhc2VJbk91dFF1aW50OiBjdWJpYy1iZXppZXIoLjg2LDAsLjA3LDEpO1xuJGVhc2VJblNpbmU6IGN1YmljLWJlemllciguNDcsMCwuNzQ1LC43MTUpO1xuJGVhc2VPdXRTaW5lOiBjdWJpYy1iZXppZXIoLjM5LC41NzUsLjU2NSwxKTtcbiRlYXNlSW5PdXRTaW5lOiBjdWJpYy1iZXppZXIoLjQ0NSwuMDUsLjU1LC45NSk7XG4kZWFzZUluQmFjazogY3ViaWMtYmV6aWVyKC42LC0uMjgsLjczNSwuMDQ1KTtcbiRlYXNlT3V0QmFjazogY3ViaWMtYmV6aWVyKC4xNzUsIC44ODUsLjMyLDEuMjc1KTtcbiRlYXNlSW5PdXRCYWNrOiBjdWJpYy1iZXppZXIoLjY4LC0uNTUsLjI2NSwxLjU1KTtcblxuXG5cbiIsIlxuXG4vKiAtLS0tLVxuTWl4aW5zXG4tLS0tLSAqL1xuXG5AbWl4aW4gY2xlYXJmaXgge1xuICAmOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIGNsZWFyOiBib3RoO1xuICB9XG59XG5cbkBtaXhpbiBoaWRkZW4ge1xuICBvcGFjaXR5OiAwO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59XG5AbWl4aW4gc2hvdyB7XG4gIG9wYWNpdHk6IDE7XG4gIHZpc2liaWxpdHk6IHZpc2libGU7XG59XG5cbkBtaXhpbiBjZW50ZXJfYmxvY2t7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xufVxuXG5AbWl4aW4gc2NhbGVfd2lkdGhfZ3JpZHtcbiAgICBtYXgtd2lkdGg6MTAwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG59XG5cbkBtaXhpbiBhYnNvbHV0ZXtcbiAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICB0b3A6IDA7IHJpZ2h0OiAwOyBib3R0b206IDA7IGxlZnQ6MDtcbiAgICAgbWFyZ2luOiBhdXRvO1xufVxuXG5AbWl4aW4gZml4ZWR7XG4gICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgdG9wOiAwOyByaWdodDogMDsgYm90dG9tOiAwOyBsZWZ0OjA7XG4gICAgIG1hcmdpbjogYXV0bztcbn1cblxuQG1peGluIHNpemUoJHdpZHRoLCAkaGVpZ2h0KXtcbiAgd2lkdGg6ICR3aWR0aDtcbiAgaGVpZ2h0OiAkaGVpZ2h0O1xufSIsIi8qIC0tLS0tXG4xMiBjb2x1bW5zIFJlc3BvbnNpdmUgR3JpZFxuLS0tLS0gKi9cbi5yb3cge1xuICB6b29tOiAxO1xuICAmOmJlZm9yZSwgJjphZnRlciB7XG4gICAgY29udGVudDonXFwwMDIwJztcbiAgICBkaXNwbGF5OmJsb2NrO1xuICAgIG92ZXJmbG93OmhpZGRlbjtcbiAgICB2aXNpYmlsaXR5OmhpZGRlbjtcbiAgICB3aWR0aDowO1xuICAgIGhlaWdodDowXG4gIH1cbiAgJjphZnRlciB7Y2xlYXI6Ym90aDt9XG59XG4uZGV2aWNlLWNvbnRlbnR7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDk3cmVtO1xuICBcbiAgQGluY2x1ZGUgY2VudGVyX2Jsb2NrO1xufVxuLmNvbHVtbntcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZsb2F0OiBsZWZ0O1xuICBtaW4taGVpZ2h0OiAxcHg7XG59XG4uY29sLTF7d2lkdGg6JGNvbF8xfVxuLmNvbC0ye3dpZHRoOiRjb2xfMn1cbi5jb2wtM3t3aWR0aDokY29sXzN9XG4uY29sLTR7d2lkdGg6JGNvbF80fVxuLmNvbC01e3dpZHRoOiRjb2xfNX1cbi5jb2wtNnt3aWR0aDokY29sXzZ9XG4uY29sLTd7d2lkdGg6JGNvbF83fVxuLmNvbC04e3dpZHRoOiRjb2xfOH1cbi5jb2wtOXt3aWR0aDokY29sXzl9XG4uY29sLTEwe3dpZHRoOiRjb2xfMTB9XG4uY29sLTExe3dpZHRoOiRjb2xfMTF9XG4uY29sLTEye3dpZHRoOiRjb2xfMTJ9XG5cbmltZy5zY2FsZS13aXRoLWdyaWR7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufSIsIi8qIC0tLS0tXG5UeXBvZ3JhcGh5LCBXZWJGb250c1xuLS0tLS0gKi9cbi8vIEBmb250LWZhY2Uge1xuLy8gICBmb250LWZhbWlseTogJ2RpZG90LXJlZ3VsYXInO1xuLy8gICBzcmM6IHVybCgnI3skZm9udHMtcGF0aH0vVGhlYW5vRGlkb3QtUmVndWxhci5lb3QnKTtcbi8vICAgc3JjOiB1cmwoJyN7JGZvbnRzLXBhdGh9L1RoZWFub0RpZG90LVJlZ3VsYXIuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbi8vICAgICAgICB1cmwoJyN7JGZvbnRzLXBhdGh9L1RoZWFub0RpZG90LVJlZ3VsYXIud29mZicpIGZvcm1hdCgnd29mZicpLFxuLy8gICAgICAgIHVybCgnI3skZm9udHMtcGF0aH0vVGhlYW5vRGlkb3QtUmVndWxhci50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyksXG4vLyAgICAgICAgdXJsKCcjeyRmb250cy1wYXRofS9UaGVhbm9EaWRvdC1SZWd1bGFyLnN2ZycpIGZvcm1hdCgnc3ZnJyk7XG4vLyAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgXG4vLyB9XG5cbi8vIEBmb250LWZhY2Uge1xuLy8gICBmb250LWZhbWlseTogJ2FyY2EtaGVhdnknO1xuLy8gICBzcmM6IHVybCgnI3skZm9udHMtcGF0aH0vQXJjYS1IZWF2eS5lb3QnKTtcbi8vICAgc3JjOiB1cmwoJyN7JGZvbnRzLXBhdGh9L0FyY2EtSGVhdnkuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbi8vICAgICAgICB1cmwoJyN7JGZvbnRzLXBhdGh9L0FyY2EtSGVhdnkud29mZicpIGZvcm1hdCgnd29mZicpLFxuLy8gICAgICAgIHVybCgnI3skZm9udHMtcGF0aH0vQXJjYS1IZWF2eS50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyksXG4vLyAgICAgICAgdXJsKCcjeyRmb250cy1wYXRofS9BcmNhLUhlYXZ5LnN2ZycpIGZvcm1hdCgnc3ZnJyk7XG4vLyAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgXG4vLyB9IiwiLyogLS0tLS1cbk1lZGlhIFF1ZXJpZXNcbi0tLS0tICovXG4kbW9iaWxlOiAgICAgIFwib25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY3OXB4KVwiO1xuJHRhYmxldDogICAgICBcIm9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2ODBweClcIjtcbiRkZXNrdG9wOiAgICAgXCJvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KVwiO1xuJGRlc2t0b3AteGw6ICBcIm9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMTI5cHgpXCI7XG5cblxuQG1lZGlhICN7JG1vYmlsZX0ge1xuXHRcblx0Lm5vdC1tb2JpbGV7XG5cdFx0ZGlzcGxheTogbm9uZTtcblx0fVxufVxuXG5AbWVkaWEgI3skdGFibGV0fSB7XG5cdFxuXHQubm90LW1vYmlsZXtcblx0XHRkaXNwbGF5OiBub25lO1xuXHR9XG59XG5cblxuQG1lZGlhICN7JGRlc2t0b3B9IHtcblx0XG5cdC5ub3QtZGVza3RvcHtcblx0XHRkaXNwbGF5OiBub25lO1xuXHR9XG5cblx0Lm5vdC1tb2JpbGV7XG5cdFx0ZGlzcGxheTogYmxvY2s7XG5cdH1cbn0iLCIvKiAtLS0tLVxuUHJlbG9hZGVyXG4tLS0tLSAqL1xuLnByZWxvYWRlciB7XG4gICAgQGluY2x1ZGUgZml4ZWQ7XG4gICAgQGluY2x1ZGUgc2l6ZSgxMDAlLDEwMCUpO1xuICAgIFxuICAgIGJhY2tncm91bmQ6JGRhcmtibHVlO1xuICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB6LWluZGV4OiAxO1xuXG4gICAgXG59IiwiLyogLS0tLS1cbkNTUzMgQGtleWZyYW1lc1xuLS0tLS0gKi9cbi8qIC0tLS0tXG5TcGlubmVyXG4tLS0tLSAqL1xuLy8gQGtleWZyYW1lcyBiYWxsb29uIHtcbi8vIFx0MCUge3RyYW5zZm9ybTogdHJhbnNsYXRlWSgwcHgpO31cbi8vIFx0NTAlIHt0cmFuc2Zvcm06ICB0cmFuc2xhdGVZKDIwcHgpO31cbi8vIFx0MTAwJSB7dHJhbnNmb3JtOiB0cmFuc2xhdGVZKDBweCk7fVxuLy8gfSJdfQ== */
